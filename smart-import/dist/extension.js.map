{"version":3,"file":"extension.js","mappings":"uuBAGA,oBAAyBA,GACrB,MAAMC,EAAaC,EAAOC,SAASC,gBAAgB,wBAAwBC,MAAOC,IAC9E,MAAMC,EAASL,EAAOM,OAAOC,iBAC7B,IAAKF,IAAWD,EAEZ,YADAJ,EAAOM,OAAOE,iBAAiB,qCAKnC,MAAMC,EAAWC,EAAKC,SAClBD,EAAKE,QAAQP,EAAOQ,SAASC,IAAIC,QACjCX,EAAQW,QAINC,EAAkB,0BAA0BP,EAASQ,QAAQ,MAAO,iBAGpEZ,EAAOa,MAAKC,IACdA,EAAYC,OAAO,IAAIpB,EAAOqB,SAAS,EAAG,GAAIL,EAAgB,IAGlEhB,EAAOM,OAAOgB,uBAAuB,YAAYb,IAAW,IAGhEX,EAAQyB,cAAcC,KAAKzB,EAC/B,EAEA,wBAA8B,EA/B9B,kBACA,W,UCDA0B,EAAOC,QAAUC,QAAQ,S,UCAzBF,EAAOC,QAAUC,QAAQ,O,GCCrBC,EAA2B,CAAC,ECE5BC,EDCJ,SAASC,EAAoBC,GAE5B,IAAIC,EAAeJ,EAAyBG,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaN,QAGrB,IAAID,EAASG,EAAyBG,GAAY,CAGjDL,QAAS,CAAC,GAOX,OAHAQ,EAAoBH,GAAUI,KAAKV,EAAOC,QAASD,EAAQA,EAAOC,QAASI,GAGpEL,EAAOC,OACf,CCnB0BI,CAAoB,K","sources":["webpack://smart-import/./src/extension.ts","webpack://smart-import/external commonjs \"vscode\"","webpack://smart-import/external node-commonjs \"path\"","webpack://smart-import/webpack/bootstrap","webpack://smart-import/webpack/startup"],"sourcesContent":["import * as vscode from 'vscode';\nimport * as path from 'path';\n\nexport function activate(context: vscode.ExtensionContext) {\n    const disposable = vscode.commands.registerCommand('extension.autoImport', async (fileUri: vscode.Uri) => {\n        const editor = vscode.window.activeTextEditor;\n        if (!editor || !fileUri) {\n            vscode.window.showErrorMessage('No active editor or file selected');\n            return;\n        }\n\n        // Calculate relative path\n        const fromPath = path.relative(\n            path.dirname(editor.document.uri.fsPath),\n            fileUri.fsPath\n        );\n\n        // Generate the import statement\n        const importStatement = `import something from \"${fromPath.replace(/\\\\/g, '/')}\";\\n`;\n\n        // Insert the import statement at the top of the file\n        await editor.edit(editBuilder => {\n            editBuilder.insert(new vscode.Position(0, 0), importStatement);\n        });\n\n        vscode.window.showInformationMessage(`Imported ${fromPath}`);\n    });\n\n    context.subscriptions.push(disposable);\n}\n\nexport function deactivate() {}\n","module.exports = require(\"vscode\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(265);\n"],"names":["context","disposable","vscode","commands","registerCommand","async","fileUri","editor","window","activeTextEditor","showErrorMessage","fromPath","path","relative","dirname","document","uri","fsPath","importStatement","replace","edit","editBuilder","insert","Position","showInformationMessage","subscriptions","push","module","exports","require","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call"],"sourceRoot":""}